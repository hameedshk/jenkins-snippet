/*
    Name:       project-name
    Template:   Jenkinsfile Template for .NET Core 
    Version:    v1.0
*/

// designated branch names
def branch_prod = 'main'
def branch_val = 'val'
def branch_dev = 'dev'

// the path to the csproj file for your microservice
def csproj_path = './Hello/Hello_API.csproj'

// the path to the csproj file for your microservice
def test_csproj_path = './Hello.Tests/Hello.TESTS.csproj'

// the path to the nupkg file for publishing on Artifactory
def nupkg_path = './Hello/nupkg/*.nupkg'

pipeline {
    agent {
        node {
            label 'dotnet90' 
        }
    }
    options {
        timeout(time: 20, unit: 'MINUTES') 
    }
    stages {
        stage ('checkout git'){
            steps{
                checkout scm
                sh 'git branch -a'
            }
        }
        stage ('install modules'){
            steps{
                sh 'cp /var/lib/jenkins/nuget/NuGet.config ./NuGet.config'
                sh "dotnet restore ${csproj_path}"
            }
        }
        stage ('build locally'){
            steps{
                sh "dotnet build ${csproj_path}"
            }
        }

        // if you have unit tests defined uncomment the following to have them run        
        stage ('unit tests'){
            steps{
                sh "dotnet test ${test_csproj_path}"
            }
        }
    
        // in case your package is a library uncomment the following to test the packaging
        /*
        stage ('package locally'){
            steps{
                sh "dotnet pack ${csproj_path} --output nupkg"
            }
        }
        */
    }
}